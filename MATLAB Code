%% Link definition
a1 = 10;
a2 = 10;
d1 = 15;
d3 = 8;


%%  Path definition
L(1) = Link([0,d1,a1,0,0],'standard');% theta1
L(2) = Link([0,0,a2, pi,0],'standard');% theta2
L(3) = Link([0,-d3,0,0,1],'standard');% d3, do not need to define because its in prysmatic
L(3).qlim = [0,20];% maximum limitation d3 can go
L(4) = Link([0,0,0,0,0],'standard');% theta4

robot = SerialLink(L,'name','SCARA Robot');
robot.plot([0 0 0 0],'workspace',[-25 25 -25 25 -25 25]);
robot.teach

%% Define path from the robot

matrix = [15 10 0; % position of SCARA robot[x y z];
         -15 10 5;
        -10 -15 5;
         15 -10 5;
       -12 -12 0];
%% Transformation
qinitial = [0 0 0 0];
P1 = transl(matrix(1,1),matrix(1,2),matrix(1,3));
P2 = transl(matrix(2,1),matrix(2,2),matrix(2,3));
P3 = transl(matrix(3,1),matrix(3,2),matrix(3,3));
P4 = transl(matrix(4,1),matrix(4,2),matrix(4,3));
P5 = transl(matrix(5,1),matrix(5,2),matrix(5,3));

%% Determine the angle from the path
q1 = robot.ikine(P1,qinitial,[1,1,1,0,0,0]);
q2 = robot.ikine(P2,q1,[1,1,1,0,0,0]);
q3 = robot.ikine(P3,q2,[1,1,1,0,0,0]);
q4 = robot.ikine(P4,q3,[1,1,1,0,0,0]);
q5 = robot.ikine(P5,q4,[1,1,1,0,0,0]);
%% Forward kinematics 
qP1 = robot.fkine(q1);
qP2 = robot.fkine(q2);
qP3 = robot.fkine(q3);
qP4 = robot.fkine(q4);
qP5 = robot.fkine(q5);




%% Animation
t = [0:0.05:2]; %time interval to do each path

%% Initial(qinitial) position to 1st position 
r1 = jtraj(qinitial,q1,t);
robot.plot(r1,'workspace',[-25 25 -25 25 -25 25]);
pause(0.0);

%% 1st position to 2nd position 
r2 = jtraj(q1,q2,t);
robot.plot(r2,'workspace',[-25 25 -25 25 -25 25]);
pause(0.02);

%% 2nd position to 3rd position 
r3 = jtraj(q2,q3,t);
robot.plot(r3,'workspace',[-25 25 -25 25 -25 25]);
pause(0.02);

%% 3rd position to 4th position 
r4 = jtraj(q3,q4,t);
robot.plot(r4,'workspace',[-25 25 -25 25 -25 25]);
pause(0.02);

%% 4th position to 1st position 
r5 = jtraj(q4,q1,t);
robot.plot(r5,'workspace',[-25 25 -25 25 -25 25]);
pause(0.02);

%% Return to the original position, 1st position to initial position 
r6 = jtraj(q1,qinitial,t);
robot.plot(r6,'workspace',[-25 25 -25 25 -25 25]);
pause(0.02);
robot.teach
